DWAPlannerROS:
  # Robot configuration parameters
  acc_lim_x: 3.0 # The x acceleration limit of the robot in meters/sec^2
  acc_lim_y: 0 # The y acceleration limit of the robot in meters/sec^2
  acc_lim_th: 20.0 # The rotational acceleration limit of the robot in radians/sec^2

  max_vel_x: 0.8 # The maximum x velocity for the robot in m/s.
  min_vel_x: -0.1 # The minimum x velocity for the robot in m/s, negative for backwards motion.
  max_vel_y: 0 # The maximum y velocity for the robot in m/s
  min_vel_y: 0 # The minimum y velocity for the robot in m/s

  # max_trans_vel: 0.5 # The absolute value of the maximum translational velocity for the robot in m/s
  max_vel_trans: 0.8
  # min_trans_vel: 0.1 # The absolute value of the minimum translational velocity for the robot in m/s
  min_vel_trans: 0.1
  # max_rot_vel: 1.0 # The absolute value of the maximum rotational velocity for the robot in rad/s
  max_vel_theta: 1.57
  # min_rot_vel: 0.2  # The absolute value of the minimum rotational velocity for the robot in rad/s
  min_vel_theta: -1.57

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1 # The tolerance, in radians, for the controller in yaw/rotation when achieving its goal
  xy_goal_tolerance: 0.25  # The tolerance, in meters, for the controller in the x and y distance when achieving a goal
  latch_xy_goal_tolerance: false # If goal tolerance is latched, if the robot ever reaches the goal xy location, it will
  # simply rotate in place, even if it ends up outside the goal tolerance while it is doing so.

  # # Forward Simulation Parameters
  sim_time: 2.5 # The amount of time to forward-simulate trajectories in seconds
  sim_granularity: 0.02 # The step size, in meters, to take between points on a given trajectory
  vx_samples: 6 # The number of samples to use when exploring the x velocity space
  # vy_samples: 0 # The number of samples to use when exploring the y velocity space
  vtheta_samples: 20 # The number of samples to use when exploring the theta velocity space
  # penalize_negative_x: true

  # # Trajectory scoring parameters
  path_distance_bias: 32.0 # The weighting for how much the controller should stay close to the path it was given
  goal_distance_bias: 24.0 # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  occdist_scale: 0.01 # The weighting for how much the controller should attempt to avoid obstacles
  # forward_point_distance: 0.325 # The distance from the center point of the robot to place an additional scoring point, in meters
  stop_time_buffer: 0.5  # The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid in seconds
  # scaling_speed: 0.25 # The absolute value of the velocity at which to start scaling the robot's footprint, in m/s
  # max_scaling_factor: 0.2 # The maximum factor to scale the robot's footprint by

  # # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)

TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 3.0
  acc_lim_theta:  20.0

  max_vel_x: 0.8
  min_vel_x: -0.1

  max_vel_theta: 1.57
  min_vel_theta: -1.57
  min_in_place_vel_theta: 0.314

  holonomic_robot: false
  escape_vel: -0.5

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 6.28
  xy_goal_tolerance: 0.25
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 3.0
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 6
  vtheta_samples: 20
  controller_frequency: 15.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale:  0.01 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  #pdist_scale: 0.7 #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  #gdist_scale: 0.5 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8
  path_distance_bias: 0.7 # The weighting for how much the controller should stay close to the path it was given
  goal_distance_bias: 0.5 # The weighting for how much the controller should attempt to reach its local goal, also controls speed

  heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: true  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1
